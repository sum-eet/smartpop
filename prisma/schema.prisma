// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

// Note that some adapters may set a maximum length for the String type by default, please ensure your strings are long
// enough when changing adapters.
// See https://www.prisma.io/docs/orm/reference/prisma-schema-reference#string for more information
datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

model Popup {
  id            String    @id @default(cuid())
  shop          String
  title         String
  isActive      Boolean   @default(true)
  triggerType   String    // "delay", "scroll", or "exit"
  triggerValue  Int       // seconds for delay, percentage for scroll, 0 for exit
  heading       String
  description   String?
  buttonText    String    @default("Get Discount")
  discountCode  String?
  views         Int       @default(0)
  conversions   Int       @default(0)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  
  // Relationships
  analytics     PopupAnalytics[]
  
  @@index([shop])
  @@index([isActive])
}

model PopupAnalytics {
  id         String   @id @default(cuid())
  popupId    String
  event      String   // "view", "conversion", or "close"
  sessionId  String
  timestamp  DateTime @default(now())
  userAgent  String?
  referrer   String?
  
  // Relationships
  popup      Popup    @relation(fields: [popupId], references: [id], onDelete: Cascade)
  
  @@index([popupId])
  @@index([event])
  @@index([popupId, event])
}
